{"version":3,"file":"static/js/388.ffbb6c01.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","common/JpegIcon/index.tsx","components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#000000\"};\r\n  color: ${(p) => (p.color ? \"#00FFFF\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(0, 206, 209);\r\n    background-color: rgb(0, 206, 209);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import React from 'react';\n\ninterface JpegIconProps {\n  src: string;\n  width: string;\n  height: string;\n  alt?: string;\n}\n\nconst JpegIcon = ({ src, width, height, alt }: JpegIconProps) => {\n  const altText = alt || src;  // Provide a default alt text if none is provided\n  const imagePath = `${process.env.PUBLIC_URL}/img/images/${src}`;  // Construct the image path dynamically\n\n  return (\n    <img src={imagePath} alt={altText} width={width} height={height} />\n  );\n};\n\nexport default JpegIcon;  // Use default export here\n\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { useHistory } from 'react-router-dom';  // Import useHistory\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport  JpegIcon  from \"../../common/JpegIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const history = useHistory();  // Initialize useHistory\r\n\r\n  const handleNavigation = (path: string) => {\r\n    history.push(path);\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <JpegIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {direction === \"right\" && (\r\n                <ButtonWrapper>\r\n                  {button && button.map((item, index) => (\r\n                    <Button\r\n                      key={index}\r\n                      color={item.color}\r\n                      onClick={() => handleNavigation('/use-syntheo')}  // Update navigation path\r\n                    >\r\n                      {t(item.title)}\r\n                    </Button>\r\n                  ))}\r\n                </ButtonWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","src","width","height","altText","alt","imagePath","concat","process","ContentSection","Content","_templateObject2","StyledRow","Row","_templateObject3","direction","ContentWrapper","_templateObject4","ButtonWrapper","_templateObject5","_templateObject6","_templateObject7","_templateObject8","withTranslation","icon","title","content","button","section","t","id","history","useHistory","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","JpegIcon","map","item","index","path","push"],"sourceRoot":""}